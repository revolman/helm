apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: {{ .Values.metadata.creationTimestamp }}
  labels:
    app: "{{ template "app.name" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
  name: {{ template "app.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ template "app.name" . }}"
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: {{ .Values.strategy.type }}
  template:
    metadata:
      creationTimestamp: {{ .Values.metadata.creationTimestamp }}
      labels:
        app: "{{ template "app.name" . }}"
    spec:
      containers:
      - image: "{{ .Values.image }}:{{ .Values.imageTag }}" 
        name: {{ .Values.app }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        env:
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: db-conf
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: db-conf
                key: DB_PORT
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: db-conf
                key: DB_USER
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: db-conf
                key: DB_NAME
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: db-passwd
                key: DB_PASS
        volumeMounts:
          - mountPath: "/srv/www/viberr/media/"
            name: media-volume
      volumes:
      - name: media-volume
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.persistentVolumeClaim.claimName }}
